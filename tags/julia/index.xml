<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julia on moskomule log</title>
    <link>http://mosko.tokyo/tags/julia/index.xml</link>
    <description>Recent content in Julia on moskomule log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Written by Ryuichiro Hataya</copyright>
    <atom:link href="http://mosko.tokyo/tags/julia/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Juliaに触ってみた</title>
      <link>http://mosko.tokyo/post/julia-boxmuller/</link>
      <pubDate>Sun, 23 Oct 2016 22:36:34 +0900</pubDate>
      
      <guid>http://mosko.tokyo/post/julia-boxmuller/</guid>
      <description>

&lt;p&gt;我らがJupyterの&lt;strong&gt;Ju&lt;/strong&gt;,であるところのJupyterに触って，IPythonに相当するIJuliaを導入してJupyterから操作してみた．ちょっと触った感想は，強いR-lang．&lt;/p&gt;

&lt;h2 id=&#34;ijuliaの導入&#34;&gt;IJuliaの導入．&lt;/h2&gt;

&lt;p&gt;Juliaは &lt;a href=&#34;http://julialang.org/&#34;&gt;ここ&lt;/a&gt;から導入する．ターミナルから開いて，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
Package.add(&amp;quot;IJulia&amp;quot;)

using IJulia

notebook()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでJupyterが起動する．あとは普段通り．&lt;/p&gt;

&lt;h2 id=&#34;触る&#34;&gt;触る．&lt;/h2&gt;

&lt;p&gt;折角なので手元にあったPRMLにあった，一様乱数からガウス分布を得るBox-Muller法によって得られる分布をプロットする．以下ではプロットツールの&lt;code&gt;Gadfly&lt;/code&gt;を用いている．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
using Gadfly

set_default_plot_size(10cm,10cm);

# Box-Muller法



function box_muller(num)

    x = []

    y = []

    for i = 0:num

        a = rand()

        b = rand()

        η = 2a -1 #1

        ζ = 2b -1

        r2 = η ^ 2 + ζ ^ 2

        if (r2) &amp;lt;= 1

            x = push!(x, η  * √(-2 * log(r2) / r2)) #2

            y = push!(y, ζ  * √(-2 * log(r2) / r2))

        else

            skip

        end

    end

    return (x, y) 

end



(x,y) = box_muller(10000)

plot(x=x,y=y)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#1,#2に示したように，Juliaでは&lt;code&gt;\eta,\zeta&lt;/code&gt;と入力してタブを押すと &amp;lsquo;η，ζ&amp;rsquo; と補完されて変数として用いることが出来る．また，&amp;rsquo;\sqrt&amp;rsquo;は&amp;rsquo;√&amp;rsquo;になってそのまま&lt;code&gt;sqrt&lt;/code&gt;として使用できる．数学よりのことをするときには数式に与えられている変数と一致させられて便利かもしれないし，何より面白い．&lt;/p&gt;

&lt;p&gt;{% asset_img output.svg 出力 %}&lt;/p&gt;

&lt;p&gt;PythonとScalaで満足しているし，情報も少ないのでいまのところ使う当てはないけれど，少し触った感じは軽快でよいし，プログラムをよく書く人にはRよりは取っつきやすいのかもしれない&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>