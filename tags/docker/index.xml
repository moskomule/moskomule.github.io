<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on moskomule log</title>
    <link>https://mosko.tokyo/tags/docker/</link>
    <description>Recent content in Docker on moskomule log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 19 Oct 2017 22:42:01 +0900</lastBuildDate>
    
	<atom:link href="https://mosko.tokyo/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>研究のためのDocker入門</title>
      <link>https://mosko.tokyo/post/docker_for_research/</link>
      <pubDate>Thu, 19 Oct 2017 22:42:01 +0900</pubDate>
      
      <guid>https://mosko.tokyo/post/docker_for_research/</guid>
      <description>はじめに 「TensorFlowのCustomOpsが古いGCCでしかコンパイルできず詰んだ」「先輩から引き継いだコードを動かす環境構築が面倒」といった経験はないでしょうか．この記事ではDockerを使うことで環境依存/環境汚染の問題を減らすことを考えていきます．
1年ほど前からDockerの存在は知っていましたが，いざはじめようと「Docker入門」のような記事を読むとUbuntuのイメージをプルしてコンテナを作ってお疲れ様でした，という感じであまり御利益が分かりませんでした．
先日絶対に挫折しない！オープンソースソフトウェア「Docker」入門編 #04という記事でDockerfileを作って環境を構築する話を読んで少し得心できました．どこでも同一のコマンドで同一の環境を，ホストの環境を汚さずに作れるので非常に便利です．
インストール等 DockerCEをダウンロードしてインストールします．環境によってはDocker toolboxを利用する必要があります．
Linuxの場合はインストール後に
$ sudo groupadd docker $ sudo usermod -aG docker $USER $ logout # login later  を行います．インストールが成功していれば以下のようになるはずです．
$ docker run --rm hello-world ... Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the &amp;quot;hello-world&amp;quot; image from the Docker Hub.</description>
    </item>
    
  </channel>
</rss>