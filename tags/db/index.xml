<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DB on moskomule log</title>
    <link>https://mosko.tokyo/tags/db/</link>
    <description>Recent content in DB on moskomule log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 22 Oct 2016 00:21:34 +0900</lastBuildDate>
    
	<atom:link href="https://mosko.tokyo/tags/db/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PythonでMySQLを使う</title>
      <link>https://mosko.tokyo/post/python-and-mysql/</link>
      <pubDate>Sat, 22 Oct 2016 00:21:34 +0900</pubDate>
      
      <guid>https://mosko.tokyo/post/python-and-mysql/</guid>
      <description>現在開発しているものはScalaで前処理を行っているので，本番の処理も本当は全部Scalaで書ければよかったのだけれども，そうは問屋が卸さず，種々の原因によりPythonが必要になってしまった． これなら最初から全部Pythonでよかったのでは，とも思うけれど，PythonはJupyterで小さなものを色々弄るのには使うものの，大きいものをPythonで書いた経験が無いので心配．型が違う，という注意が沢山出そうだ．
ともかく，そのためにPythonからMySQLを扱う必要が出てきた．Pythonists3は新しいもの好きなのか，いまやNoSQLを使うのがトレンドなのか，MySQL周りの情報が少ないのだが，pymysqlを使うことに落ち着いた．
connection = pymysql.connect(host=&amp;#34;HOSTNAME&amp;#34;, user=&amp;#34;USERNAME&amp;#34;, password=&amp;#34;PASSWORD&amp;#34;, db=&amp;#34;DB_NAME&amp;#34;, charset=&amp;#39;utf8&amp;#39;, cursorclass=pymysql.cursors.DictCursor) #1 with connection.cursor() as cursor: sql = &amp;#34;SELECT name FROM table WHERE id=%s&amp;#34; cursor.execute(sql, (900)) results = cursor.fetchall() for r in results: b = r[&amp;#39;name&amp;#39;] print(bytes.decode(b)) #2 #1を指定することで，返ってくる結果がdict形式になって分かりやすい．
最後，#2でnameに相当する列がvarbinaryであったので，文字列に変換するのにbytes.decode()が必要だった．とりあえずこれで一件落着．</description>
    </item>
    
  </channel>
</rss>